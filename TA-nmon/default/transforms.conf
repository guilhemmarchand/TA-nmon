# transforms.conf

###########################################
#			nmon data stanza						#
###########################################

# Host override based on event data form nmon_data sourcetype

[nmon_data_hostoverride]
DEST_KEY = MetaData:Host
REGEX = ^\"{0,1}[a-zA-Z0-9\_]+\"{0,1},\"{0,1}[a-zA-Z0-9\-\_\.]+\"{0,1},\"{0,1}([a-zA-Z0-9\-\_\.]+)\"{0,1},.+
FORMAT = host::$1

# New with 1.2.55, allows the perf data generation in json mode
# rewrite the sourcetype to regular nmon_data

[nmon_data_json_hostoverride]
DEST_KEY = MetaData:Host
REGEX = \"hostname\":\s\"([a-zA-Z0-9\-\_\.]+)\"
FORMAT = host::$1

[nmon_data_json_sourcetypeoverride]
DEST_KEY = MetaData:Sourcetype
REGEX = .*
FORMAT = sourcetype::nmon_data

# the following stanza will create **indexed time** fields, to be used when choosing the KV search time extraction only (data from syslog with nmon-logger)
# creating fields at indexing time is usually not recommended and not necessary
# however, we want to be able to use the tstats command over some basic fields including Splunk meta but as well the basic fields in Nmon context: OStype, type

[nmon_data_kv_createindexed_OStype]
REGEX = \sOStype=\"(?<OStype>[^\"]*)\"
WRITE_META = true
FORMAT = OStype::$1
DEFAULT_VALUE = NULL

[nmon_data_kv_createindexed_type]
REGEX = \stype=\"(?<type>[^\"]*)\"
WRITE_META = true
FORMAT = type::$1
DEFAULT_VALUE = NULL

# the following stanza will create **indexed time** fields, to be used when choosing the json search time extraction only
# creating fields at indexing time is usually not recommended and not necessary
# however, we want to be able to use the tstats command over some basic fields including Splunk meta but as well the basic fields in Nmon context: OStype, type

[nmon_data_json_createindexed_OStype]
REGEX = \"OStype\":\s\"(?<OStype>[^\"]*)\"
WRITE_META = true
FORMAT = OStype::$1
DEFAULT_VALUE = NULL

[nmon_data_json_createindexed_type]
REGEX = \"type\":\s\"(?<type>[^\"]*)\"
WRITE_META = true
FORMAT = type::$1
DEFAULT_VALUE = NULL

###########################################
#			nmon config stanza					#
###########################################

# Host override based on event data form nmon_config sourcetype

[nmon_config_hostoverride]
DEST_KEY = MetaData:Host
REGEX = CONFIG\,[a-zA-Z0-9\-\:\.]+\,([a-zA-Z0-9\-\_\.]+)\,[a-zA-Z0-9\-\_\.]+
FORMAT = host::$1

###########################################
#			CIM various
###########################################

[inventory_network_interface]
REGEX = BBB\w*,[^,]*,ifconfig,\"(?<interface>[a-zA-Z]{1,}\d{1,})
FORMAT = interface::$1
MV_ADD = true

[inventory_network_ip]
REGEX = BBB\w*,[^,]*,ifconfig,\"\sinet\s(?:addr:)?(?<ip>[\d|\.]*)\s
FORMAT = ip::$1
MV_ADD = true

# Linux only
[inventory_network_mac]
REGEX = BBB\w*,[^,]*,ifconfig,\".*HWaddr\s([0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2}:[0-9a-fA-F]{2})
FORMAT = mac::$1
MV_ADD = true

##############################################
#			SYSLOG SPECIAL SECTIONS					#
##############################################

# These parameters are dedicated to the deployment of Nmon using syslog as the transport layer
# You can forward Nmon Performance data from your servers to your central syslog server(s), and finally to Splunk

# In a Syslog deployment, we will generate data key=value data instead of standard csv data
# Additionally, using Syslog as the transport layer requires specific operation on data at indexing time.

# Deploying Nmon with syslog requires additional configuration on search heads, and potentially indexers
# This also requires specific configuration on end clients (syslog config, cron config, logrotate)

# See the README file at the root if this package, or read the online guide for Syslog deployment:

# Rewrite sourcetype after the parsing at indexing time will have been proceeded by Splunk
# This prevents from applying unwanted parameters and ensure
# timestamp identification is done over Nmon events, and not on syslog metadata that can potentially not be accurate.

# ***You must respect** these following configuration in your syslog related deployment
# the pattern used within each REGEX must match the syslog $programname 

# the $programname is being used to filter syslog data coming from syslog hosts, and finally recompose solid files on syslog collectors
# Any change to the $programname in syslog configuration without customizing these stanza will result in data not being recognized and correctly
# identified in Splunk.

# This is a copy of the default Splunk host rewrite stanza for syslog data
[syslog-host]
DEST_KEY = MetaData:Host
REGEX = :\d\d\s+(?:\d+\s+|(?:user|daemon|local.?)\.\w+\s+)*\[?(\w[\w\.\-]{2,})\]?\s
FORMAT = host::$1

[nmon_data_fromsyslog_rewrite]
DEST_KEY = MetaData:Sourcetype
REGEX = \snmon_performance:\s
FORMAT = sourcetype::nmon_data

[nmon_config_fromsyslog_rewrite]
DEST_KEY = MetaData:Sourcetype
REGEX = \snmon_config:\s
FORMAT = sourcetype::nmon_config

[nmon_collect_fromsyslog_rewrite]
DEST_KEY = MetaData:Sourcetype
REGEX = \snmon_collect:\s
FORMAT = sourcetype::nmon_collect

[nmon_processing_fromsyslog_rewrite]
DEST_KEY = MetaData:Sourcetype
REGEX = \snmon_processing:\s
FORMAT = sourcetype::nmon_processing

[nmon_clean_fromsyslog_rewrite]
DEST_KEY = MetaData:Sourcetype
REGEX = \snmon_clean:\s
FORMAT = sourcetype::nmon_clean
